name: Deploy [production]

on:
  push:
    branches:
      - 'env/production'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: setup server connections
        env:
          PUBLIC_KEY: ${{ secrets.public_key }}
          PRIVATE_KEY: ${{ secrets.private_key }}
          HOST_KEY_VERIFICATION: ${{ secrets.host_key_verification }}
        run: |
          mkdir ~/.ssh
          echo "$PUBLIC_KEY" > ~/.ssh/id_rsa.pub
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "$HOST_KEY_VERIFICATION" >> ~/.ssh/known_hosts
          ssh-keyscan -H jumphost.kingscode.nl >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          chmod 600 ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          eval `ssh-agent -s`
          ssh-add ~/.ssh/id_rsa

      - name: test connection
        run: ssh -T jumphost@jumphost.kingscode.nl

<%_ if (options.plugins.includes('fontawesomepro')){ _%>
      - name: build .npmrc
        env:
          FONT_AWESOME_TOKEN: ${{ secrets.font_awesome_token }}
        run: |
          echo "@fortawesome:registry=https://npm.fontawesome.com/" >> .npmrc
          echo "//npm.fontawesome.com/:_authToken=$FONT_AWESOME_TOKEN" >> .npmrc
<%_ } _%>

      - name: build application environment
        run: |
          touch .env.production
          echo "NODE_ENV=production" >> .env.production
          echo "VUE_APP_ENV=vue_production" >> .env.production
          echo "VUE_APP_RELEASE=${GITHUB_SHA}" >> .env.production
          echo "VUE_APP_ROOT_API=" >> .env.production
          <%_ if (options.plugins.includes('analytics')) { _%>
          echo "VUE_APP_ANALYTICS=" >> .env.production
          <%_ } _%>
          <%_ if (options.plugins.includes('sentry')) { _%>
          echo "VUE_APP_SENTRY=" >> .env.production
          <%_ } _%>
          echo "VUE_APP_PUBLIC_PATH=/" >> .env.production

      - name: build
        run: |
          npm ci
          npm run build

      - name: remove /old deployment and create /new folder for deployment
        uses: appleboy/ssh-action@master
        with:
          host: host
          username: user
          key: ${{ secrets.private_key }}
          proxy_host: jumphost.kingscode.nl
          proxy_username: jumphost
          proxy_key: ${{ secrets.private_key }}
          script: |
            shopt -s dotglob
            cd ~/domains/example.com/public_html
            rm -rf ./old
            mkdir -p ./new
            mkdir -p ./old

      - name: deployment
        run: |
          cd dist
          rsync -ave "ssh -o ProxyJump=jumphost@jumphost.kingscode.nl" ./ user@host:~/domains/example.com/public_html/new

      - name: move previous deployment to ./old and move ./new deployment to ./
        uses: appleboy/ssh-action@master
        with:
          host: host
          username: user
          key: ${{ secrets.private_key }}
          proxy_host: jumphost.kingscode.nl
          proxy_username: jumphost
          proxy_key: ${{ secrets.private_key }}
          script: |
            shopt -s dotglob
            cd ~/domains/example.com/public_html
            mv `\ls -1 ./ | grep -v "\<new\>" | grep -v "\<old\>" | grep -v "\<api\>"` ./old
            mv ./new/* ./
            rm -rf ./new
